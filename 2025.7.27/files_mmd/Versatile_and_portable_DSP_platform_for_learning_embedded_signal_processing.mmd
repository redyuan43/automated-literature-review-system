# Versatile and portable DSP platform for

learning embedded signal processing

###### Abstract

This paper presents a versatile and portable digital signal processing (DSP) platform that is highly suitable for learning embedded signal processing anywhere and anytime. This DSP platform is based on the Texas Instruments VC5505 eZDSP USB Stick. We outline some of the important features in this development tool, such as the internal fast Fourier transform (FFT) hardware accelerator and the programmable high-speed codec that can be used in learning real-time embedded signal processing. This portable and easy-to-use platform extends the real-time DSP activities beyond the traditional laboratory environment. We highlight some project examples that used this platform.

Woon-Seng Gan\({}^{1}\), Abhishek Seth\({}^{1}\), Sen M. Kuo\({}^{2}\)\({}^{1}\)Digital Signal Processing Lab, School of Electrical and Electronic Engineering,

Nanyang Technological University, SINGAPORE

\({}^{2}\)Department of Electrical Engineering, Northern Illinois University, Dekalb, IL 60115, USA

Email: \({}^{1}\)ewsgan@ntu.edu.sg, \({}^{2}\)kuo@ceet.niu.edu

DSP education platform, real-time signal processing, FFT hardware accelerator, fixed-point DSP.

## 1 Introduction

Hands-on digital signal processing (DSP) experiments conducted in universities are usually confined to the laboratory settings, and most DSP development boards are AC powered and too bulky or cumbersome to be used on the move. As portable gadgets, like iPhones, iPads, iPods are now everywhere, students can carry these portable devices wherever they go and can perform different tasks whenever they need. In the same way, a portable and versatile real-time DSP learning platform, which can easily be plugged into the USB connector of the notebook, would be an attractive option for students to work on the hands-on DSP assignments anywhere and anytime they.

Recently, a handy TMS320VC5505 DSP development platform [1] that can be readily plugged into the USB connector of notebook or PC, provide a cheap and easy-to-use platform in learning signal processing and capturing real-life signals in cafeteria, shopping malls, parks, etc., via microphone for real-time signal analysis and processing. These features provide an attractive platform to expand the experiment scopes beyond the traditional laboratory assignments that usually use synthesized or pre-recorded signals. Furthermore, with this portable platform, hands-on lab assignments are no longer confined to allocated time slots in labs, and students can self-learn and learn in groups. By making this tool affordable, we hope that students' interest in DSP can be readily enhanced, and be motivated to apply signal processing in their daily activities. In fact, we found from our previous teaching experience [2],[3] that if we can instill the interest of students, they can come up with many surprises in their project assignments.

In this paper, we will investigate several useful features in this portable DSP platform that can help students in learning real-time DSP. We also suggest some simple and interesting projects that students can perform their experiments anywhere outside the laboratory. Some of these programming programs are available in the author's website [4] and c5505 ezDSP Google Code website [5]. We conclude this paper by encouraging more activities using this DSP USB Stick through the TI E2E Community Forum [6].

## 2 Features of the C5505 eZdsp USB Stick

The VC5505 eZdsp USB Stick, as shown in Fig.1, consists of a 16-bit VC5505 DSP processor [7], on-board emulator, AIC3204 stereo audio codec [8], headphone out, stereo input, 64 Kbyte EEPROM, and USB connector to power up this device. The dimension of this USB stick is just 3.15 in \(\times\) 1.5 in, which is similar to the size of a stick of gum. The eZDSP comes with the Code Composer Studio (CCS) [9]

Figure 1: TMS320VC5505 eZdsp USB Stick.

integrated development tool, and retails at $49. This price is highly affordable for students. To allow further input and output interfaces (such as switches, LED indicators) to this development platform, expansion connector and five user accessible test points are also included.

The VC5505 DSP processor is a 16-bit fixed-point processor that operates at 100 MHz. It consists of two multiply-accumulate (MAC) units, 40-bit and 16-bit arithmetic logic units (ALU), 320 Kbyte of internal memory and 128 Kbyte of read-only memory. An added feature of the VC5505 is the inclusion of a tightly-coupled FFT hardware accelerator (HWAFFT) [10]. The HWAFFT supports 8- to 1024-point (radix 2) real- and complex-valued FFTs. The HWAFFT is around 3 times faster and 5 times more energy efficient compared to the FFT routine in the DSP Library [10]. The ease of programming the HWAFFT allows students to change different parameters in frequency transform, and promotes time-frequency processing in their algorithms.

The stereo audio codec used in the eZDSP is a high-end codec AIC3204 that can support sampling rates from 8 kHz (for voice) to 192 kHz (for hi-end audio) with 3 stereo single-ended pairs or 3 fully-differential pairs. There are several signal processing options [11] that are built into this codec. For example, there are different levels of gain settings at the analog-to-digital convertor (ADC) that are useful in relating the concept of dB and linear voltage scale. In addition, an automatic gain control (AGC) is used to maintain constant-level output during recording. A set of programmable parameters are included to control incoming signal to a certain target level with the right amount of response times. The built-in digital decimation filter can also be programmed, and important concept of ADC can be learned by programming this audio codec. Similar features are also provided for the digital-to-analog convertor (DAC), which include the programmable interpolation filter, digital volume control, dynamic range compression (DRC), and user-programmable adaptive filters. These highly programmable features in the AIC3204 make the eZDSP an ideal platform to understand the signal processing that goes into the analog-to-digital-to-analog signal path. Several case studies will be provided in the following sections to highlight the effects of changing these parameters on incoming signal.

## 3 Real-time signal acquisition and processing platform

In this section, we use some simple experiments to show how students can explore the programmable hardware features that are inside the eZDSP. These experiments take an introductory approach by providing a step-by-step guideline in setting typical conditions for data acquisition via microphone or portable audio player. Different AGC and DRC parameters [11] are used to achieve good signal acquisition and noise reduction. A graphical user interface (GUI) programmed via the CCS provides a good learning platform in understanding how those parameters, which can be adjusted on-the-fly, affect the performance of signal acquisition and playback. In addition, we show some experiments, which emphasize on applying theoretical understanding to solve practical problems, can be designed around the HWAFFT. All these experiments are documented in the course website for students to get started immediately.

### Experiments in programming the audio codec

As stated in the previous section, the high-end audio codec provides many learning opportunities in achieving the best acquisition and playback results in the eZDSP. Figure 2 shows the screenshot of using control software, which is written as a GEL file in CCS, to control the AGC parameters. By setting an appropriate noise threshold just above the environment noise, we can greatly enhance the signal level by the AGC. There are other AGC settings, such as the maximum AGC gain, target level, attack time, decay time, and hysteresis that must be carefully controlled to achieve good signal-to-noise measurement. In fact, this AGC experiment requires students to work in different real-life environments, such as cafeteria, shopping small, library, and even in automobile, and come up with a good set of AGC parameters for different environment.

Besides the gain control in the signal acquisition, the audio codec also provides gain control (in the form of DRC) to the DAC, before sending to the amplifier of the speaker units or headphones. The main role of the DRC is to enhance the soft part of the processed signal and avoid extensive gain when signal level exceeds a certain peak limit. Students also need to come up with a suitably designed highpass and lowpass filters to extract the audio information for computing energy estimation in the DRC unit. Similar to the AGC, DRC parameters for optimum playback level can also be adjusted in real-time via GUI control. Several experiment settings can be carried out on different playback systems (headphones, portable speakers, etc) and under different environmental noise conditions to achieve good playback level.

Figure 2: Control software in CCS is used to find the best settings for AGC under different noise and targeted signal levels.

### Programming the FFT hardware accelerator

A useful feature of the VC5505 processor is the inclusion of the HWAFFT. However, there are certain limitations in using this HWAFFT, such as the maximum length of FFT is limited to 1024, and only decimation-in-time radix-2 FFT can be used. The HWAFFT requires software routine to generate bit-reversed input and setting scaling option to prevent overflow in fixed-point implementation.

We can view this limitation as a challenge for students to impart the knowledge that they learned from classroom, and implement the FFT concepts and tricks to overcome the limitation imposed by the HWAFFT. Therefore, a deeper understanding of the FFT theory can be gained by working on these assignments. Some of the FFT tricks that we can implement in the eZDSP platform include:

1. Extending the 1024-point FFT into a 2048-point FFT by performing 1024-point FFTs on odd and even data samples, and combining these FFTs using a final stage radix-2 computation [10].
2. Converting 2\(N\)-point FFT and inverse FFT results into \(N\)-point discrete cosine transform (DCT) and inverse DCT [12].
3. Implementing a sliding FFT [13] by first computing an initial \(N\)-point FFT using the HWAFFT, and updating the spectrum iteratively using a software routine.

The inclusion of HWAFFT in DSP core emphasizes the growing importance of implementing real-time time-frequency algorithms in today's applications.

### Graphical interface for live monitoring and debugging

The integrated development environment, CCSv4 used in programming the eZDSP, provides graphical interface that allows users to capture and observe real-time signal during processing. This neat feature not only helps to highlight important learning concepts, but also aids in real-time debugging of code. A breakpoint is simply inserted at the probe point of the programming code, and updates the graphical plots whenever the breakpoint is encountered. Figure 3 shows an example of the real-time display of input signal in time and frequency domain.

### Learning fixed-point programming

Fixed-point programming [2],[14] is seldom taught in undergraduate courses as it involves more complicated programming techniques, like scaling, overflow prevention and limited dynamic range. However, more than 90% of the embedded systems are still implemented in fixed-point, and fixed-point programming is a highly marketable skill set for students. An introductory course [2],[14] on fixed-point programming can be taught to the students so that they are aware of the differences between floating-point and fixed-point implementation, and how they can apply some practical techniques to overcome limitations of fixed-point arithmetic.

## 4 Hands-on DSP Assignments in Outdoor

The hardware and software of eZDSP described in the preceding sections provide students with the tools to create interesting project and test them in an outdoor environment. In this section, we show some real-time signal processing projects that can be implemented on this platform. As shown in Fig. 4, a standalone DSP box has been built. This DSP box consists of the VC5505 eZDSP USB Stick, a battery unit, a small amplifier, and switches to select the different modes of operation. Stereo jacks from the eZDSP will be used to connect to external speakers and microphone or portable player. This unit can also be programmed by a notebook via a USB cable. Some project examples that can be used as demonstrating prototypes for students are summarized as follows:

1. _Handheld sound pressure level (SPL) meter_: Microphone is connected to the input jack of the eZDSP, and the processor can perform various processing tasks, like windowing, averaging, weighting, and computation of the SPL. The SPL reading can be displayed in the CCS window, or its intensity can be indicated through the onboard LEDs.
2. _An audio effect box_: This audio effect box takes in input from a portable audio player, like iPad and performs different audio effect processing like bass enhancement, graphic equalizer, 3D audio effects, etc. Several fundamental DSP building blocks like filtering, gain control, mixing, and signal energy computation are used to implement these audio effects.
3. _A portable biomedical sensing device_: Similar to some of the Apple Apps that allow iPhone to become a heart monitoring device, we can also program the eZDSP to do the same function. Microphone can be attached near the chest to pick up the heart beat. Some filtering

Figure 3: Real-time time and frequency plots of signal captured by the input microphone connected to the VC5505 eZDSP.

must be carried out to remove ambient noise for more accurate reading, and the HWAFFT can be a very useful hardware in computing the rate of the heartbeat. Of course, this example is not meant to replace the doctor and the stethoscope, it is meant for student to work on different types of signal, and how signal processing techniques can be deployed to achieve good signal acquisition.
4. _A binaural signal acquisition headset:_ This headset is equipped with a pair of microphones attached near the left and right ears to mimic how human hears with two ears. Some useful environmental measurements can be acquired using this binaural listening device. However, the eZDSP is limited with memory, and students must find a way to transfer the signal captured to the memory of the portable notebook or netbook. Alternatively, a sister C5515 eZDSP USB stick [15] is also available that has a microSD connector that allows users to record data over an extended period of time. Several real-time processing tasks, such as filtering, noise removal, etc. are carried out by the processor before storing these processed data into a central memory.

As these experiments can be carried out outside the laboratory and in groups, we require students to account for their work done by videotaping their experiments. The contents of video recording must include introduction and objectives of project, show how experiments are being carried out and how they program the eZDSP to solve their problems. Their video clips will be deposited in the course website for students to view, rate, and learn from each other. It also provides an easy platform for instructor to grade the students' effort and learning objectives.

We will kick start a course on EE4455: Embedded System in the coming semester (July 2011), and students will be given different assignments using the VC5505 eZDSP USB stick. A video presentation on how students can make use of this USB stick will be made available online [4]. In addition, an online community support [6] is also one of the strong points in using this development platform. We hope that as more users use this eZDSP platform, more project examples and ideas will emerge, and make this platform a useful educational tool in imparting and sharing real-time DSP ideas in universities.

## 5 Conclusions

In this paper, we presented a fixed-point DSP learning platform that can be used to perform several new exercises that involve online signal acquisition and real-time analysis and processing using an affordable DSP platform. A standalone of this platform boosted by the internal Flash and powered by small battery unit also provides an ideal showcase for technology proof-of-concept.

This low-cost platform also makes it very affordable for students to purchase, and provides many opportunities to explore not only the real-time programming of the fixed-point DSP, but also on programming of the HWAFFT and the audio codec. Therefore, this low-cost platform does not restrict users to implement simple DSP applications. On the contrary, there are many interesting advanced DSP applications that can be implemented using this platform. By allowing students to explore DSP beyond the laboratory setting can potentially enhance self-learning attitude and ease the pressure of completing lab assignment within the allocated time.

## References

* [1] Technical Reference Manual of the TMS320VC5505 eZdsp USB Stick, 2009.
* [2] S. M. Kuo and W. S. Gan, _Digital Signal Processors: Architectures, Implementations, and Applications_, Upper Saddle River, NJ: Prentice Hall, 2005.
* [3] W. S. Gan and S. M. Kuo, _Embedded Signal Processing with the Micro Signal Architecture_, IEEE-Wiley, 2007.
* [4] Author's Website, [http://www3.nut.edu.sg/home/ewsgan/](http://www3.nut.edu.sg/home/ewsgan/).
* [5] e5505 eZDSP Google Code Website [http://code.google.com/p/c5505-ezdsp/](http://code.google.com/p/c5505-ezdsp/)
* [6] Texas Instruments E2E Community Forum, [http://e2e.ti.com/](http://e2e.ti.com/)
* [7] TMS320VC5505 Fixed-Point Digital Signal Processor, SPRS503B, Jan 2010.
* [8] TLV320AIC3204 Ultra Low Power Stereo Audio Codec, SLOS602A, Oct 2008.
* [9] Code Composer Studio (CCS) Version 4.0
* [10] FFT Implementation on the TMS320VC5505, TMS320C5505, and TMS320C5515 DSPs, SPRABB6A, June 2010
* [11] Using the AGC, DRC and Beep Generator Function in TLV320AIC3204/54/3100/10/11/20/36 Devices, SLAA446, March 2010.
* [12] C. Diab, M. Oueidat, and R. Prost, "A new IDCT-DFT relationship reducing the IDCT computational cost," _IEEE Trans. Signal Process._, vol. 50, no. 7, pp. 1681-1684, Jul. 2002.
* [13] E. Jacobsen and R. Lyons, "The Sliding DFT," _IEEE Signal Processing Magazine_, vol. 20, no. 2, pp. 74-80, Mar. 2003.
* [14] W T Padgett and D. V. Anderson, _Fixed-Point Signal Processing_, Morgan & Claypool Publishers, 2009.
* [15] Technical Reference Manual of the TMS320C5515 eZdsp USB Stick, 2010.

Figure 4: A DSP box embedded with the VC5505 eZDSP for demonstrating a portable system.